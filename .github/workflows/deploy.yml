name: Vue.js Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Echo secrets
      run: |
        echo "${{ secrets.REMOTE_PATH }}"
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - run: npm ci
    - run: npm run build
    - name: Verify build output
      run: |
          pwd
          ls -la dist
          echo "Total files in dist: $(find dist -type f | wc -l)"
    - name: Fix permissions
      run: |
        ls -la dist
        chmod -R 755 dist

    - name: Create build archive
      run: |
        echo "=== Creating archive ==="
        tar -czf dist.tar.gz dist/
        ls -la dist.tar.gz
        echo "Archive size: $(du -h dist.tar.gz)"
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist.tar.gz
        retention-days: 1
        if-no-files-found: error
        compression-level: 6

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: ./
    - name: Extract build files
      run: |
        tar -xzf dist.tar.gz
        ls -la dist/
        
    - name: Deploy to server
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key
        chmod 600 private_key
        rsync -avz --delete -e "ssh -i private_key -o StrictHostKeyChecking=no" \
          dist/ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_PATH }}
        rm private_key
        
    - name: Verify deployment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ${{ secrets.REMOTE_PATH }}
          echo "Current directory: $(pwd)"
          echo "Deployed files:"
          ls -la
          echo "Deployment completed successfully"
